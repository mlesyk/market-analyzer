apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-analyzer
  namespace: order-analyzer-ns
  labels:
    app: order-analyzer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-analyzer
  template:
    metadata:
      labels:
        app: order-analyzer
    spec:
      nodeSelector:
        node: "ora3"
      imagePullSecrets:
        - name: myregistrykey
      containers:
        - name: order-analyzer
          image: lesykm/market-app:latest
          command: ["java", "-Xmx8G", "-jar", "/opt/app/order-analyzer-service.jar"]
          env:
            - name: ORDERS_ANALYZER_PORT
              value: "8082"
            - name: KAFKA_HOSTNAME
              value: "kafka-service.kafka-ns.svc.cluster.local"
            - name: KAFKA_PORT
              value: "9092"
            - name: DATABASE_HOSTNAME
              value: postgresdb-order-analyzer-service
            - name: DATABASE_PORT
              value: "5432"
            - name: DB_USERNAME
              value: postgres
            - name: DB_PASSWORD
              value: postgres
            - name: DATABASE_NAME
              value: market_data
            - name: ROOT_LOG_LEVEL
              value: INFO
            - name: APP_LOG_LEVEL
              value: INFO
            - name: SPRING_LOG_LEVEL
              value: INFO
            - name: KAFKA_CONSUMER_POOL_SIZE
              value: "5"
            - name: KAFKA_CONSUMER_QUEUE_SIZE
              value: "500"
            - name: KAFKA_CLEANER_CACHE_LIFETIME_MINUTES
              value: "5"
            - name: KAFKA_CLEANER_REGISTRY_READ_TIME_SECONDS
              value: "60"
            - name: KAFKA_CLEANER_SCHEDULER_DELAY
              value: "300000"
            - name: KAFKA_CLEANER_SCHEDULER_INITIAL_DELAY
              value: "900000"
            - name: KAFKA_PRODUCER_SCHEDULER_DELAY
              value: "300000"
            - name: KAFKA_PRODUCER_SCHEDULER_INITIAL_DELAY
              value: "5000"
            - name: KAFKA_CLEANER_ENABLED
              value: "true"
            - name: KAFKA_PRODUCER_POOL_SIZE
              value: "5"
          ports:
            - name: app-port
              containerPort: 8082